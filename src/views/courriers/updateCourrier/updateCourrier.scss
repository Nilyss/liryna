@use "../../../utils/styles/variables" as vars;
@use "../../../utils/styles/mixins" as mixins;

#updateCourrier {
  min-height: calc(100dvh - 6dvh - 4dvh); // 100dvh - header - subnav
  background: linear-gradient(135deg, #f8f9fb 0%, #e8ecf0 50%, #f0f3f7 100%);
  padding: 1em 0.5em;
  margin-top: calc(6dvh + 4dvh); // Compenser header + subnav fixe

  // Responsive tablette
  @media (min-width: vars.$tabletWidth) {
    padding: 1.5em 1em; 
  }

  // Responsive desktop
  @media (min-width: vars.$desktopWidth) {
    padding: 2em 1em;
  }

  .updateCourrierContainer {
    max-width: 90em; // Plus large pour accueillir les deux colonnes
    margin: 0 auto;
    padding: 0 0.5em; // Mobile first
    flex: 1; // Prend tout l'espace disponible
    display: flex;
    flex-direction: column;

    // Responsive tablette
    @media (min-width: vars.$tabletWidth) {
      padding: 0 1em;
    }
  }

  .updateCourrierHeader {
    display: flex;
    flex-direction: column; // Mobile first - stack vertically
    gap: 1em; // Mobile gap
    color: vars.$fontColorPrimary;

    // Responsive tablette
    @media (min-width: vars.$tabletWidth) {
      flex-direction: row; // Horizontal on larger screens
      align-items: center;
      gap: 2em;
    }

    .pageTitle {
      font-size: 2em; // Mobile first
      font-weight: 700;
      margin: 0;
      background: vars.$utilsGradient;
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;

      // Responsive tablette
      @media (min-width: vars.$tabletWidth) {
        font-size: 2.3em;
      }

      // Responsive desktop
      @media (min-width: vars.$desktopWidth) {
        font-size: 2.5em;
      }
    }
  }

  .loadingState,
  .errorState {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2em;
    min-height: 20em;
    text-align: center;
  }

  .updateCourrierContent {
    display: flex;
    flex-direction: column; // Mobile: stack vertically
    gap: 1.5em;
    margin: 1.5em 0 0; // Only top margin

    // Responsive desktop
    @media (min-width: vars.$desktopWidth) {
      flex-direction: row; // Side by side on desktop
      gap: 2em;
      margin-top: 2em;
    }

    .previewSection {
      background: white;
      border-radius: 12px;
      box-shadow: 0 0.25em 1.25em rgba(0, 0, 0, 0.08);
      overflow: hidden;

      // Mobile: pas de largeur fixe
      // Desktop: 40% de largeur
      @media (min-width: vars.$desktopWidth) {
        flex: 0 0 40%; // 40% de largeur, pas de flex-grow
      }

      .previewHeader {
        padding: 1.5em;
        background: vars.$utilsGradient;
        color: white;
        display: flex;
        align-items: center;
        gap: 0.75em;

        h2 {
          margin: 0;
          font-size: 1.2em;
          font-weight: 600;
        }

        svg {
          font-size: 1.3em;
        }
      }

      .previewContainer {
        padding: 1em;
        height: 50em; // Hauteur fixe pour la preview

        // Responsive desktop
        @media (min-width: vars.$desktopWidth) {
          height: 60em; // Plus grande sur desktop
        }

        .pdfPreview,
        .imagePreview {
          width: 100%;
          height: 100%;
          border: none;
          border-radius: 8px;
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .imagePreview {
          object-fit: contain;
          background: vars.$greyBackground;
        }
      }
    }

    .formSection {
      background: white;
      border-radius: 12px;
      box-shadow: 0 0.25em 1.25em rgba(0, 0, 0, 0.08);
      overflow: hidden;

      // Desktop: prend le reste de l'espace
      @media (min-width: vars.$desktopWidth) {
        flex: 1; // Prend l'espace restant (60%)
      }

      .courrierForm {
        height: 100%;
        display: flex;
        flex-direction: column;

        .formGrid {
          padding: 1.5em; // Mobile first
          display: flex;
          flex-direction: column;
          gap: 1.2em; // Mobile gap uniformisé
          flex: 1; // Prend tout l'espace disponible

          // Responsive tablette
          @media (min-width: vars.$tabletWidth) {
            padding: 2em;
            gap: 1.5em; // Tablette gap uniformisé
          }

          // Responsive desktop
          @media (min-width: vars.$desktopWidth) {
            gap: 1.8em; // Desktop gap uniformisé
          }
        }

        .formSection {
          background: transparent;
          box-shadow: none;
          border-radius: 0;
          display: flex;
          flex-direction: column;
          gap: 1em; // Espacement uniforme entre titre et contenu

          h3.sectionTitle {
            display: flex;
            align-items: center;
            gap: 0.75em;
            font-size: 1.2em; // Mobile first
            font-weight: 600;
            color: vars.$utilsPrimary;
            padding: 0 0 0.5em; // Only bottom padding
            border-bottom: 2px solid vars.$borderColor;
            margin: 0; // Remove default margins

            // Responsive tablette
            @media (min-width: vars.$tabletWidth) {
              font-size: 1.3em;
            }

            svg {
              font-size: 1.3em; // Mobile first

              // Responsive tablette
              @media (min-width: vars.$tabletWidth) {
                font-size: 1.4em;
              }
            }
          }

          .formRow:not(:last-child) {
            margin-bottom: 0.5em; // Espacement entre les lignes dans une section
          }
        }

        .formRow {
          display: flex;
          flex-direction: column; // Mobile: stack vertically
          gap: 1em; // Mobile gap

          // Responsive tablette
          @media (min-width: vars.$tabletWidth) {
            flex-direction: row; // Horizontal on larger screens
            gap: 1.5em;
          }
        }

        .formGroup {
          display: flex;
          flex-direction: column;
          gap: 0.5em; // Using gap instead of margins
          flex: 1; // Equal distribution in rows

          label {
            display: flex;
            align-items: center;
            gap: 0.5em;
            font-weight: 600;
            color: vars.$fontColorPrimary;
            font-size: 0.9em;

            svg {
              font-size: 1em;
              color: vars.$utilsPrimary;
            }
          }

          input,
          textarea {
            padding: 0.75em 1em;
            border: 2px solid vars.$borderColor;
            border-radius: 8px;
            font-size: 0.95em;
            transition: all 0.3s ease;
            background: white;

            &:focus {
              outline: none;
              border-color: vars.$utilsPrimary;
              box-shadow: 0 0 0 3px rgba(38, 208, 206, 0.1);
            }

            &::placeholder {
              color: vars.$fontColorSecondary;
            }
          }

          // React-Select styling
          .react-select-container {
            .react-select__control {
              border: 2px solid vars.$borderColor;
              border-radius: 8px;
              font-size: 0.95em;
              min-height: 38px;
              height: 50px; // Même hauteur que les inputs normaux
              transition: all 0.3s ease;
              box-shadow: none;

              &:hover {
                border-color: vars.$borderColor;
              }

              &--is-focused {
                border-color: vars.$utilsPrimary;
                box-shadow: 0 0 0 3px rgba(38, 208, 206, 0.1);

                &:hover {
                  border-color: vars.$utilsPrimary;
                }
              }
            }

            .react-select__value-container {
              padding: 0 1em; // Supprimer le padding vertical
              height: 50px; // Même hauteur que le control
              display: flex;
              align-items: center; // Centrer verticalement le contenu
            }

            .react-select__single-value {
              color: vars.$fontColorPrimary;
              font-size: 0.95em;
            }

            .react-select__placeholder {
              color: vars.$fontColorSecondary;
              font-size: 0.95em;
            }

            .react-select__indicator-separator {
              display: none;
            }

            .react-select__dropdown-indicator {
              color: vars.$fontColorSecondary;
              padding: 0.5em;

              &:hover {
                color: vars.$utilsPrimary;
              }
            }

            .react-select__indicators {
              height: 46px; // Ajuster la hauteur des indicateurs
            }

            .react-select__menu {
              border: 2px solid vars.$borderColor;
              border-radius: 8px;
              box-shadow: 0 0.25em 1.25em rgba(0, 0, 0, 0.08);
              margin-top: 0.25em;
            }

            .react-select__option {
              font-size: 0.95em;
              color: vars.$fontColorPrimary;

              &--is-selected {
                background-color: vars.$utilsPrimary;
                color: white;
              }

              &--is-focused {
                background-color: rgba(38, 208, 206, 0.1);
                color: vars.$fontColorPrimary;
              }

              &:hover {
                background-color: rgba(38, 208, 206, 0.1);
              }
            }
          }

          textarea {
            resize: vertical;
            min-height: 100px;
          }
        }

        .formActions {
          padding: 1em 1.5em; // Mobile first
          background: vars.$greyBackground;
          display: flex;
          flex-direction: column-reverse; // Mobile: cancel on top
          gap: 1em; // Mobile gap
          border-top: 1px solid vars.$borderColor;
          margin-top: auto; // Pousse les actions vers le bas

          // Responsive tablette
          @media (min-width: vars.$tabletWidth) {
            flex-direction: row; // Horizontal on larger screens
            justify-content: flex-end;
            padding: 1.5em 2em;
          }

          .btnCancel,
          .btnSubmit {
            padding: 0.75em 2em;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center; // Center on mobile
            gap: 0.5em;
            font-weight: 600;
            transition: all 0.3s ease;

            // Responsive tablette
            @media (min-width: vars.$tabletWidth) {
              width: auto; // Auto width on larger screens
            }

            &:disabled {
              opacity: 0.6;
              cursor: not-allowed;
            }
          }

          .btnCancel {
            background: white;
            color: vars.$fontColorPrimary;
            border: 2px solid vars.$borderColor;

            &:hover:not(:disabled) {
              border-color: vars.$errorColor;
              color: vars.$errorColor;
            }
          }

          .btnSubmit {
            background: vars.$utilsGradient;
            color: white;
            border: none;

            &:hover:not(:disabled) {
              transform: translateY(-1px);
              box-shadow: 0 4px 12px rgba(38, 208, 206, 0.4);
            }
          }
        }
      }
    }
  }
}